DROP TABLE IF EXISTS `film_likes` CASCADE;
DROP TABLE IF EXISTS `ratings_mpa` CASCADE;
DROP TABLE IF EXISTS `genres` CASCADE ;
DROP TABLE IF EXISTS `friends` CASCADE;
DROP TABLE IF EXISTS `films` CASCADE;
DROP TABLE IF EXISTS `users` CASCADE;
DROP TABLE IF EXISTS `film_genres` CASCADE;
DROP TABLE IF EXISTS `reviews` CASCADE;
DROP TABLE IF EXISTS `review_reactions` CASCADE;
DROP INDEX IF EXISTS `review_reactions_user_id_index`;
DROP INDEX IF EXISTS `review_reactions_review_id_index`;

CREATE TABLE IF NOT EXISTS ratings_mpa
(
    id          int generated by default as identity primary key,
    name        varchar(255) NOT NULL UNIQUE,
    description varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           bigint generated by default as identity primary key,
    name         varchar(255) NOT NULL,
    description  varchar(200),
    release_date date         NOT NULL,
    duration     int          NOT NULL,
    rating_id    int          NOT NULL REFERENCES ratings_mpa (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS genres
(
    id   int generated by default as identity primary key,
    name varchar(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  bigint REFERENCES films (id) ON DELETE CASCADE,
    genre_id int REFERENCES genres (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS users
(
    id       bigint generated by default as identity primary key,
    email    varchar(255) NOT NULL,
    login    varchar(255) NOT NULL,
    name     varchar(255),
    birthday date
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id  bigint REFERENCES films (id) ON DELETE CASCADE,
    user_id bigint REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id bigint REFERENCES users (id) ON DELETE CASCADE,
    friend_id bigint REFERENCES users (id) ON DELETE CASCADE,
    status boolean
);

CREATE TABLE IF NOT EXISTS  reviews
(
    review_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content  VARCHAR NOT NULL,
    is_positive  BOOLEAN NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    film_id INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    useful_count INTEGER
);


CREATE TABLE IF NOT EXISTS  review_reactions
(
    user_id     INTEGER  REFERENCES users (id) ON DELETE CASCADE,
    review_id   INTEGER  REFERENCES reviews (review_id) ON DELETE CASCADE,
    reaction    VARCHAR NOT NULL,
    PRIMARY KEY (user_id, review_id)
);

CREATE INDEX review_reactions_user_id_index ON review_reactions (user_id);
CREATE INDEX review_reactions_review_id_index ON review_reactions (review_id);
